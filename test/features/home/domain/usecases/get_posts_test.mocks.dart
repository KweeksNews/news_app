// Mocks generated by Mockito 5.2.0 from annotations
// in kweeksnews_app/test/features/home/domain/usecases/get_posts_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:kweeksnews_app/core/entities/post_list.dart' as _i6;
import 'package:kweeksnews_app/core/error/failures.dart' as _i5;
import 'package:kweeksnews_app/features/home/domain/repositories/home_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [HomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepository extends _i1.Mock implements _i3.HomeRepository {
  MockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.PostList>> getPosts(
          {List<String>? categoryIn,
          List<String>? categoryNotIn,
          List<String>? tagIn,
          List<String>? tagNotIn,
          int? postsCount,
          bool? forceRefresh}) =>
      (super.noSuchMethod(
              Invocation.method(#getPosts, [], {
                #categoryIn: categoryIn,
                #categoryNotIn: categoryNotIn,
                #tagIn: tagIn,
                #tagNotIn: tagNotIn,
                #postsCount: postsCount,
                #forceRefresh: forceRefresh
              }),
              returnValue: Future<_i2.Either<_i5.Failure, _i6.PostList>>.value(
                  _FakeEither_0<_i5.Failure, _i6.PostList>()))
          as _i4.Future<_i2.Either<_i5.Failure, _i6.PostList>>);
}
